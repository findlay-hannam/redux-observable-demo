{"ast":null,"code":"var _jsxFileName = \"/Users/hannamf/Documents/code/redux-obs-knowledge-share/src/App.js\";\nimport React from 'react';\nimport ReactRedux from 'react-redux';\nimport './App.css';\nconsole.clear();\nconst PING = 'PING';\nconst PONG = 'PONG';\n\nconst ping = () => ({\n  type: PING\n});\n\nconst pingEpic = action$ => action$.ofType(PING).delay(1000) // Asynchronously wait 1000ms then continue\n.mapTo({\n  type: PONG\n});\n\nconst pingReducer = (state = {\n  isPinging: false\n}, action) => {\n  switch (action.type) {\n    case PING:\n      return {\n        isPinging: true\n      };\n\n    case PONG:\n      return {\n        isPinging: false\n      };\n\n    default:\n      return state;\n  }\n}; // components/App.js\n\n\nconst connect = ReactRedux.connect;\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"I'm gonna use redux\");\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/hannamf/Documents/code/redux-obs-knowledge-share/src/App.js"],"names":["React","ReactRedux","console","clear","PING","PONG","ping","type","pingEpic","action$","ofType","delay","mapTo","pingReducer","state","isPinging","action","connect","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,WAAP;AACAC,OAAO,CAACC,KAAR;AAEA,MAAMC,IAAI,GAAG,MAAb;AACA,MAAMC,IAAI,GAAG,MAAb;;AAEA,MAAMC,IAAI,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEH;AAAR,CAAP,CAAb;;AAEA,MAAMI,QAAQ,GAAGC,OAAO,IACtBA,OAAO,CAACC,MAAR,CAAeN,IAAf,EACGO,KADH,CACS,IADT,EACe;AADf,CAEGC,KAFH,CAES;AAAEL,EAAAA,IAAI,EAAEF;AAAR,CAFT,CADF;;AAKA,MAAMQ,WAAW,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAAT,EAA+BC,MAA/B,KAA0C;AAC5D,UAAQA,MAAM,CAACT,IAAf;AACE,SAAKH,IAAL;AACE,aAAO;AAAEW,QAAAA,SAAS,EAAE;AAAb,OAAP;;AAEF,SAAKV,IAAL;AACE,aAAO;AAAEU,QAAAA,SAAS,EAAE;AAAb,OAAP;;AAEF;AACE,aAAOD,KAAP;AARJ;AAUD,CAXD,C,CAaA;;;MAEQG,O,GAAYhB,U,CAAZgB,O;;AAER,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAKD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport ReactRedux from 'react-redux';\nimport './App.css';\nconsole.clear();\n\nconst PING = 'PING';\nconst PONG = 'PONG';\n\nconst ping = () => ({ type: PING });\n\nconst pingEpic = action$ =>\n  action$.ofType(PING)\n    .delay(1000) // Asynchronously wait 1000ms then continue\n    .mapTo({ type: PONG });\n\nconst pingReducer = (state = { isPinging: false }, action) => {\n  switch (action.type) {\n    case PING:\n      return { isPinging: true };\n\n    case PONG:\n      return { isPinging: false };\n\n    default:\n      return state;\n  }\n};\n\n// components/App.js\n\nconst { connect } = ReactRedux;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      I'm gonna use redux\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}